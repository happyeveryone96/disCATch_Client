{"ast":null,"code":"var _jsxFileName = \"/Users/jinwoojung/Desktop/Streetcatshelter_Client/discatch/src/pages/Slider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { Login, Slide } from \"../components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOTAL_SLIDES = 1;\n\nconst Slider = () => {\n  _s();\n\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const slideRef = useRef(null);\n\n  const nextSlide = () => {\n    if (currentSlide >= TOTAL_SLIDES) {\n      // 더 이상 넘어갈 슬라이드가 없으면 슬라이드를 초기화합니다.\n      setCurrentSlide(0);\n    } else {\n      setCurrentSlide(currentSlide + 1);\n    }\n  };\n\n  const prevSlide = () => {\n    if (currentSlide === 0) {\n      setCurrentSlide(TOTAL_SLIDES);\n    } else {\n      setCurrentSlide(currentSlide - 1);\n    }\n  };\n\n  useEffect(() => {\n    slideRef.current.style.transition = \"all 0.5s ease-in-out\";\n    slideRef.current.style.transform = `translateX(-${currentSlide}00%)`; // 백틱을 사용하여 슬라이드로 이동하는 애니메이션을 만듭니다.\n  }, [currentSlide]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(SliderContainer, {\n        ref: slideRef,\n        children: [/*#__PURE__*/_jsxDEV(Slide, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BtnWrap, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: prevSlide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: nextSlide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slider, \"xy2PVioj/ON15QwG9Cc5eBSPOO0=\");\n\n_c = Slider;\nexport default Slider;\nconst Container = styled.div`\n  width: 100%;\n  overflow: hidden; // 선을 넘어간 이미지들은 보이지 않도록 처리합니다.\n`;\n_c2 = Container;\nconst BtnWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c3 = BtnWrap;\nconst Button = styled.button`\n  width: 10px;\n  height: 10px;\n  border-radius: 10px;\n  border: none;\n  background: green;\n  margin: 5px;\n  &:hover {\n    transition: all 0.3s ease-in-out;\n    background-color: coral;\n    color: #fff;\n  }\n`;\n_c4 = Button;\nconst SliderContainer = styled.div`\n  width: 100%;\n  display: flex; //이미지들을 가로로 나열합니다.\n`;\n_c5 = SliderContainer;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Slider\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"BtnWrap\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"SliderContainer\");","map":{"version":3,"sources":["/Users/jinwoojung/Desktop/Streetcatshelter_Client/discatch/src/pages/Slider.jsx"],"names":["React","useState","useEffect","useRef","styled","Login","Slide","TOTAL_SLIDES","Slider","currentSlide","setCurrentSlide","slideRef","nextSlide","prevSlide","current","style","transition","transform","Container","div","BtnWrap","Button","button","SliderContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,eAA7B;;AAEA,MAAMC,YAAY,GAAG,CAArB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAMU,QAAQ,GAAGR,MAAM,CAAC,IAAD,CAAvB;;AACA,QAAMS,SAAS,GAAG,MAAM;AACtB,QAAIH,YAAY,IAAIF,YAApB,EAAkC;AAChC;AACAG,MAAAA,eAAe,CAAC,CAAD,CAAf;AACD,KAHD,MAGO;AACLA,MAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACD;AACF,GAPD;;AAQA,QAAMI,SAAS,GAAG,MAAM;AACtB,QAAIJ,YAAY,KAAK,CAArB,EAAwB;AACtBC,MAAAA,eAAe,CAACH,YAAD,CAAf;AACD,KAFD,MAEO;AACLG,MAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACD;AACF,GAND;;AAQAP,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACG,OAAT,CAAiBC,KAAjB,CAAuBC,UAAvB,GAAoC,sBAApC;AACAL,IAAAA,QAAQ,CAACG,OAAT,CAAiBC,KAAjB,CAAuBE,SAAvB,GAAoC,eAAcR,YAAa,MAA/D,CAFc,CAEwD;AACvE,GAHQ,EAGN,CAACA,YAAD,CAHM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAA,6BACE,QAAC,eAAD;AAAiB,QAAA,GAAG,EAAEE,QAAtB;AAAA,gCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,OAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEE;AAAjB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAED;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CArCD;;GAAMJ,M;;KAAAA,M;AAuCN,eAAeA,MAAf;AAEA,MAAMU,SAAS,GAAGd,MAAM,CAACe,GAAI;AAC7B;AACA;AACA,CAHA;MAAMD,S;AAKN,MAAME,OAAO,GAAGhB,MAAM,CAACe,GAAI;AAC3B;AACA;AACA;AACA,CAJA;MAAMC,O;AAKN,MAAMC,MAAM,GAAGjB,MAAM,CAACkB,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;MAAMD,M;AAaN,MAAME,eAAe,GAAGnB,MAAM,CAACe,GAAI;AACnC;AACA;AACA,CAHA;MAAMI,e","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Login, Slide } from \"../components\";\n\nconst TOTAL_SLIDES = 1;\n\nconst Slider = () => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const slideRef = useRef(null);\n  const nextSlide = () => {\n    if (currentSlide >= TOTAL_SLIDES) {\n      // 더 이상 넘어갈 슬라이드가 없으면 슬라이드를 초기화합니다.\n      setCurrentSlide(0);\n    } else {\n      setCurrentSlide(currentSlide + 1);\n    }\n  };\n  const prevSlide = () => {\n    if (currentSlide === 0) {\n      setCurrentSlide(TOTAL_SLIDES);\n    } else {\n      setCurrentSlide(currentSlide - 1);\n    }\n  };\n\n  useEffect(() => {\n    slideRef.current.style.transition = \"all 0.5s ease-in-out\";\n    slideRef.current.style.transform = `translateX(-${currentSlide}00%)`; // 백틱을 사용하여 슬라이드로 이동하는 애니메이션을 만듭니다.\n  }, [currentSlide]);\n  return (\n    <div>\n      <Container>\n        <SliderContainer ref={slideRef}>\n          <Slide />\n          <Login />\n        </SliderContainer>\n      </Container>\n      <BtnWrap>\n        <Button onClick={prevSlide} />\n        <Button onClick={nextSlide} />\n      </BtnWrap>\n    </div>\n  );\n};\n\nexport default Slider;\n\nconst Container = styled.div`\n  width: 100%;\n  overflow: hidden; // 선을 넘어간 이미지들은 보이지 않도록 처리합니다.\n`;\n\nconst BtnWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Button = styled.button`\n  width: 10px;\n  height: 10px;\n  border-radius: 10px;\n  border: none;\n  background: green;\n  margin: 5px;\n  &:hover {\n    transition: all 0.3s ease-in-out;\n    background-color: coral;\n    color: #fff;\n  }\n`;\nconst SliderContainer = styled.div`\n  width: 100%;\n  display: flex; //이미지들을 가로로 나열합니다.\n`;\n"]},"metadata":{},"sourceType":"module"}