{"ast":null,"code":"// LIBRARY\nimport { createSlice } from '@reduxjs/toolkit';\nimport instance from '../../shared/axios'; // REDUX\n\nimport { imgActions } from './image'; // 커뮤니티 글 등록\n\nexport const addCommunityDB = (category, contents, location, title) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const imgFile = getState().image.file; // const username = getState().user; // 나중에 가져오기\n\n    const username = '뽀삐맘';\n    console.log(imgFile.length);\n    console.log(username);\n\n    if (0 < imgFile.length < 6) {\n      alert('123'); // dispatch(\n      //   imgActions.uploadImageDB(() => {\n      //     const imageUrl = getState().image.imageUrl;\n      //     const postInfo = {\n      //       categoty: category, \n      //       contents: contents, \n      //       image: imageUrl, \n      //       location: location, \n      //       title: title, \n      //       username: username,\n      //     };\n      //     instance\n      //       .post('/community/create', postInfo)\n      //       .then((res) => {\n      //         dispatch(addCommunity(postInfo));\n      //         dispatch(imgActions.setInitialState());\n      //         history.goBack();\n      //       })\n      //       .catch((err) => {\n      //         console.log(err);\n      //       });\n      //   }),\n      // );\n    } else if (imgFile.length > 5) {\n      alert('5장 초과');\n    } else {\n      return;\n    }\n  };\n}; // 커뮤니티 글 가져오기\n\nexport const getCommunityDB = (limit = 10, location, category) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    instance.get(`/community/location/${location}?categoty=${category}&?page=0&?size=${limit}`).then(res => {\n      let communityList = res.data;\n\n      if (communityList.length < limit + 1) {\n        dispatch(getCommunity(communityList, null));\n        return;\n      }\n\n      dispatch(getCommunity(communityList, limit));\n    }).catch(err => {\n      window.alert('페이지에 오류가 있어요!');\n      console.log(err);\n    });\n  };\n}; // 커뮤니티 상세 가져오기\n\nexport const getOneCommunityDB = (communityId = '') => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    instance.get(`/community/${communityId.communityId}`).then(res => {\n      let detailCommunity = res.data;\n      dispatch(getOneCommunity(detailCommunity));\n    }).catch(err => {\n      console.error(err);\n      console.log(communityId);\n    });\n  };\n}; // 커뮤니티 수정\n\nexport const editCommunityDB = (communityId, category, contents, location, title) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const imgFile = getState().image.file;\n    const username = '뽀삐맘'; // 나중에 수정\n\n    if (imgFile.length) {\n      dispatch(imgActions.uploadImageDB(() => {\n        const imageUrl = getState().image.imageUrl;\n        instance.put(`/community/${communityId}`, {\n          category: category,\n          contents: contents,\n          image: imageUrl,\n          location: location,\n          title: title,\n          username: username\n        }).then(res => {\n          window.alert('게시글 수정 완료');\n          history.goBack();\n        }).catch(err => {\n          console.error(err);\n        });\n      }));\n    }\n\n    return;\n  };\n}; // 커뮤니티 글 삭제\n\nexport const deleteCommunityDB = communityId => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    instance.delete(`/community/${communityId.communityId}`).then(res => {\n      dispatch(deleteCommunity(communityId));\n      window.alert('게시물 삭제 완료');\n      history.push('/community');\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nconst initialState = {\n  list: [],\n  page: 0,\n  start: 0\n}; // 리듀서\n\nconst community = createSlice({\n  name: 'community',\n  initialState,\n  reducers: {\n    addCommunity: (state, action) => {\n      const categoty = action.payload.category;\n      const contents = action.payload.contents;\n      const image = action.payload.image;\n      const location = action.payload.location;\n      const title = action.payload.title;\n      const username = action.payload.username;\n      state.list.push(categoty, contents, image, location, title, username);\n    },\n    getCommunity: (state, action) => {\n      state.list = action.payload.content;\n      state.start = action.payload.number;\n    },\n    getMoreCommunity: (state, action) => {\n      return { ...state,\n        list: [...state.list, ...action.payload.content],\n        start: action.payload.number\n      };\n    },\n    getOneCommunity: (state, action) => {\n      state.list = action.payload;\n    },\n    editCommunity: (state, action) => {\n      console.log('수정 요청 완료!');\n    },\n    deleteCommunity: (state, action) => {\n      console.log('삭제 요청 완료!');\n    }\n  }\n});\nexport const {\n  addCommunity,\n  getCommunity,\n  editCommunity,\n  deleteCommunity,\n  getOneCommunity,\n  getMoreCommunity\n} = community.actions;\nexport default community;","map":{"version":3,"sources":["/Users/jinwoojung/Desktop/Streetcatshelter_Client/discatch/src/redux/modules/community.jsx"],"names":["createSlice","instance","imgActions","addCommunityDB","category","contents","location","title","dispatch","getState","history","imgFile","image","file","username","console","log","length","alert","getCommunityDB","limit","get","then","res","communityList","data","getCommunity","catch","err","window","getOneCommunityDB","communityId","detailCommunity","getOneCommunity","error","editCommunityDB","uploadImageDB","imageUrl","put","goBack","deleteCommunityDB","delete","deleteCommunity","push","initialState","list","page","start","community","name","reducers","addCommunity","state","action","categoty","payload","content","number","getMoreCommunity","editCommunity","actions"],"mappings":"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","sourcesContent":["// LIBRARY\nimport { createSlice } from '@reduxjs/toolkit';\nimport instance from '../../shared/axios';\n\n// REDUX\nimport { imgActions } from './image';\n\n// 커뮤니티 글 등록\nexport const addCommunityDB = (category, contents, location, title) => {\n  return function (dispatch, getState, { history }) {\n    const imgFile = getState().image.file;\n    // const username = getState().user; // 나중에 가져오기\n    const username = '뽀삐맘';\n    console.log(imgFile.length);\n    console.log(username);\n    if (0<imgFile.length<6) {\n      alert('123');\n      // dispatch(\n      //   imgActions.uploadImageDB(() => {\n      //     const imageUrl = getState().image.imageUrl;\n      //     const postInfo = {\n      //       categoty: category, \n      //       contents: contents, \n      //       image: imageUrl, \n      //       location: location, \n      //       title: title, \n      //       username: username,\n      //     };\n      //     instance\n      //       .post('/community/create', postInfo)\n      //       .then((res) => {\n      //         dispatch(addCommunity(postInfo));\n      //         dispatch(imgActions.setInitialState());\n      //         history.goBack();\n      //       })\n      //       .catch((err) => {\n      //         console.log(err);\n      //       });\n      //   }),\n      // );\n    } else if (imgFile.length>5) {\n      alert('5장 초과')\n    } else {\n      return;\n    }\n  };\n};\n\n// 커뮤니티 글 가져오기\nexport const getCommunityDB = (limit = 10,location,category) => {\n  return function (dispatch, getState, { history }) {\n    instance\n      .get(`/community/location/${location}?categoty=${category}&?page=0&?size=${limit}`)\n      .then((res) => {\n        let communityList = res.data;\n        if (communityList.length < limit + 1) {\n          dispatch(getCommunity(communityList, null));\n          return;\n        }\n\n        dispatch(getCommunity(communityList, limit));\n      })\n      .catch((err) => {\n        window.alert('페이지에 오류가 있어요!');\n        console.log(err);\n      });\n  };\n};\n\n// 커뮤니티 상세 가져오기\nexport const getOneCommunityDB = (communityId = '') => {\n  return function (dispatch, getState, { history }) {\n    instance\n      .get(`/community/${communityId.communityId}`)\n      .then((res) => {\n        let detailCommunity = res.data;\n        dispatch(getOneCommunity(detailCommunity));\n      })\n      .catch((err) => {\n        console.error(err);\n        console.log(communityId);\n      });\n  };\n};\n\n// 커뮤니티 수정\nexport const editCommunityDB = (communityId, category, contents, location, title) => {\n  return function (dispatch, getState, { history }) {\n    const imgFile = getState().image.file;\n    const username = '뽀삐맘'; // 나중에 수정\n    if (imgFile.length) {\n      dispatch(\n        imgActions.uploadImageDB(() => {\n          const imageUrl = getState().image.imageUrl;\n          instance\n            .put(`/community/${communityId}`, {\n              category: category,\n              contents: contents,\n              image: imageUrl,\n              location:location,\n              title: title,\n              username: username,\n            })\n            .then((res) => {\n              window.alert('게시글 수정 완료');\n              history.goBack();\n            })\n            .catch((err) => {\n              console.error(err);\n            });\n        }),\n      );\n    }\n    return;\n  };\n};\n\n// 커뮤니티 글 삭제\nexport const deleteCommunityDB = (communityId) => {\n  return function (dispatch, getState, { history }) {\n    instance\n      .delete(`/community/${communityId.communityId}`)\n      .then((res) => {\n        dispatch(deleteCommunity(communityId));\n        window.alert('게시물 삭제 완료');\n        history.push('/community');\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\nconst initialState = {\n  list: [],\n  page: 0,\n  start: 0,\n};\n\n// 리듀서\nconst community = createSlice({\n  name: 'community',\n  initialState,\n  reducers: {\n    addCommunity: (state, action) => {\n      const categoty = action.payload.category;\n      const contents = action.payload.contents;\n      const image = action.payload.image;\n      const location = action.payload.location;\n      const title = action.payload.title\n      const username = action.payload.username\n      state.list.push(categoty, contents, image, location, title, username);\n    },\n\n    getCommunity: (state, action) => {\n      state.list = action.payload.content;\n      state.start = action.payload.number;\n    },\n\n    getMoreCommunity: (state, action) => {\n      return {\n        ...state,\n        list: [...state.list, ...action.payload.content],\n        start: action.payload.number,\n      };\n    },\n\n    getOneCommunity: (state, action) => {\n      state.list = action.payload;\n    },\n\n    editCommunity: (state, action) => {\n      console.log('수정 요청 완료!');\n    },\n\n    deleteCommunity: (state, action) => {\n      console.log('삭제 요청 완료!');\n    },\n  },\n});\n\nexport const {\n  addCommunity,\n  getCommunity,\n  editCommunity,\n  deleteCommunity,\n  getOneCommunity,\n  getMoreCommunity,\n} = community.actions;\nexport default community;"]},"metadata":{},"sourceType":"module"}